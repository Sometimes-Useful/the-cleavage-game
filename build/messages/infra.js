"use strict";
exports.__esModule = true;
exports.cleavageUndefined = exports.entityRetreivedAtOffset = exports.retreiveRecordByOffsetErrorNoEntity = exports.retreiveRecordByOffsetErrorMultipleEntities = exports.gcpQueryOffsetStart = exports.queryRecordsError = exports.queryRecordsSuccess = exports.queryRecordsFilter = exports.queryRecordsStart = exports.retreiveRecordError = exports.retreiveRecordSuccess = exports.retreiveRecordStart = exports.deleteRecordError = exports.deleteRecordSuccess = exports.deleteRecordStart = exports.saveRecordError = exports.saveRecordSuccess = exports.saveRecordStart = exports.gcpBadConfiguration = exports.nexAutoplayDateIsUndefined = void 0;
exports.nexAutoplayDateIsUndefined = 'next autoplay date is undefined.';
var gcpBadConfiguration = function (gcpConfig) { return "gcpDatastoreInteractorConfiguration bad configuration : ".concat(JSON.stringify(gcpConfig)); };
exports.gcpBadConfiguration = gcpBadConfiguration;
var saveRecordStart = function (path) { return "\u2699\uFE0F  saveRecordOnGoogleDatastore - ".concat(path); };
exports.saveRecordStart = saveRecordStart;
var saveRecordSuccess = function (path) { return "\u2714\uFE0F  Entity with key path ".concat(path, " saved on datastore."); };
exports.saveRecordSuccess = saveRecordSuccess;
var saveRecordError = function (error) { return "\u274C  ".concat(error.message); };
exports.saveRecordError = saveRecordError;
var deleteRecordStart = function (path) { return "\u2699\uFE0F  deleteRecordOnGoogleDatastore - ".concat(path); };
exports.deleteRecordStart = deleteRecordStart;
var deleteRecordSuccess = function (path) { return "\u2714\uFE0F  Entity with key path ".concat(path, " deleted on datastore."); };
exports.deleteRecordSuccess = deleteRecordSuccess;
var deleteRecordError = function (error) { return "\u274C  ".concat(error.message); };
exports.deleteRecordError = deleteRecordError;
var retreiveRecordStart = function (path) { return "\u2699\uFE0F  retreiveRecordOnGoogleDatastore - ".concat(path); };
exports.retreiveRecordStart = retreiveRecordStart;
var retreiveRecordSuccess = function (path) { return "\u2714\uFE0F  Entity with key path ".concat(path, " retreived from datastore."); };
exports.retreiveRecordSuccess = retreiveRecordSuccess;
var retreiveRecordError = function (error) { return "\u274C ".concat(error.message); };
exports.retreiveRecordError = retreiveRecordError;
var queryRecordsStart = function (kind) { return "\u2699\uFE0F  queryRecordsOnGoogleDatastore - ".concat(kind, " "); };
exports.queryRecordsStart = queryRecordsStart;
var queryRecordsFilter = function (filter) { return "\u2699\uFE0F  ".concat(filter.property).concat(filter.operator).concat(filter.value); };
exports.queryRecordsFilter = queryRecordsFilter;
var queryRecordsSuccess = function (entities, kind) { return "\u2714\uFE0F  ".concat(entities.length, " entities retrieved on kind ").concat(kind, " according to filters."); };
exports.queryRecordsSuccess = queryRecordsSuccess;
var queryRecordsError = function (filter) { return "\u274C Filter ".concat(filter.value, " Error"); };
exports.queryRecordsError = queryRecordsError;
var gcpQueryOffsetStart = function (query) { return "\u2699\uFE0F  GCP Query Start - ".concat(query.kinds, " - ").concat(query.offsetVal, " - ").concat(query.limitVal); };
exports.gcpQueryOffsetStart = gcpQueryOffsetStart;
var retreiveRecordByOffsetErrorMultipleEntities = function (kind, offset) { return "\u274C Multiple entities of kind '".concat(kind, "' at offset '").concat(offset, "' ?!"); };
exports.retreiveRecordByOffsetErrorMultipleEntities = retreiveRecordByOffsetErrorMultipleEntities;
var retreiveRecordByOffsetErrorNoEntity = function (kind, offset) { return "\u274C No entity of kind '".concat(kind, "' at offset '").concat(offset, "'"); };
exports.retreiveRecordByOffsetErrorNoEntity = retreiveRecordByOffsetErrorNoEntity;
var entityRetreivedAtOffset = function (entities, query) { return "\u2714\uFE0F  ".concat(entities.length, " entities retrieved on kind '").concat(query.kinds, "' at offset '").concat(query.offsetVal, "'."); };
exports.entityRetreivedAtOffset = entityRetreivedAtOffset;
exports.cleavageUndefined = 'Cleavage is undefined.';
