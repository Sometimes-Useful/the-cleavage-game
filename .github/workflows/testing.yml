name: Testing workflow
on: [push]
jobs:
  acceptance_test:
    name: Acceptance Test Suites
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: "localhost"
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test -- -g "Feature:"
  integration_test:
    name: Integration Test Suites
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: "localhost"
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test -- -g "Integration Test - Global Cleavage Draw Pile Repository|Integration Test - Chat Gateway"
  build_docker_image:
    name: Build Docker Image
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: ${{ github.ref_name }}.lejeuduclivage.com
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
      GCP_CLOUDRUN_SERVICE: the-cleavage-game-${{ github.ref_name }}
      GCP_CLOUDRUN_SA_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
      GCP_REGION: us-central1
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run build:server
      - run: npm run build:client
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CLOUDRUN_SA_KEY }}
          export_default_credentials: true  # Set to true to authenticate the Cloud Run action
      - name: Authorize Docker push
        run: gcloud auth configure-docker
      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }}
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }}
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.GCP_CLOUDRUN_SERVICE }}
          image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }}
          region: ${{ env.GCP_REGION }}
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}