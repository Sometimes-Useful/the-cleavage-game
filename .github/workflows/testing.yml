name: Testing workflow
on: [push]
jobs:
  acceptance_test:
    name: Acceptance Test Suites
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: "localhost"
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test -- -g "Feature:"
  integration_test:
    name: Integration Test Suites
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: "localhost"
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - uses: actions/checkout@v3
      - run: npm install
      - run: npm run test -- -g "Integration Test - Global Cleavage Draw Pile Repository|Integration Test - Chat Gateway"
  build_docker_image:
    name: Build Docker Image
    runs-on : ubuntu-latest
    env:
      TWITCHUSERNAME: benjaminbohec
      TWITCHTOKEN: ${{ secrets.TWITCHTOKEN }}
      TWITCHCHANNEL: benjaminbohec
      BACKEND_SHEME: http
      BACKEND_FQDN: ${{ github.ref_name }}.lejeuduclivage.com
      PORT: 8080
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
      GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
      GCP_CLOUDRUN_SERVICE: ${{ secrets.GCP_PROJECT_ID }}-${{ github.ref_name }}
      GCP_REGION: us-central1
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2
      - name: Git checkout on branch ${{ github.ref_name }}
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Build server
        run: npm run build:server
      - name: Build client
        run: npm run build:client
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SA_JSON }}'
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Authorize Docker push on Google Cloud container registry
        run: gcloud auth configure-docker
      - name: Build docker container from Dockerfile
        run: docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }} .
      - name: Push Container to Google Cloud Storage
        run: docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }}
      - name: Deploy to Google Cloud Platform - Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.GCP_CLOUDRUN_SERVICE }}
          image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_CLOUDRUN_SERVICE }}:${{  github.sha }}
          region: ${{ env.GCP_REGION }}
          secrets: |
            GCP_PROJECT_ID=blah:latest
            GCP_CLIENT_EMAIL=blah:latest
            GCP_PRIVATE_KEY=blah:latest
            BACKEND_SHEME=https:latest
            BACKEND_FQDN=dev.lejeuduclivage.com:latest
            PORT=8080:latest
      - name: Show deployment URL
        run: echo ${{ steps.deploy.outputs.url }}